{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddharth-laptop\\\\Desktop\\\\authscate web 1\\\\authscate_website\\\\src\\\\components\\\\MobileScroll\\\\ScreenText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScreenText = _ref => {\n  _s();\n\n  let {\n    screen,\n    setCurrentImg,\n    i\n  } = _ref;\n  const ref = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const setItemVisible = e => {\n    var _e$;\n\n    if ((_e$ = e[0]) !== null && _e$ !== void 0 && _e$.isIntersecting) {\n      setIsVisible(!isVisible);\n      setCurrentImg(i);\n    }\n  };\n\n  const options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.6\n  };\n  useEffect(() => {\n    const observer = new IntersectionObserver(setItemVisible, options);\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `screen-text ${isVisible ? \"text-visible\" : \"\"}`,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-heading\",\n      children: screen.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-mockup-wrapper only-mobile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-mockup \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-mockup-screen flex absolute-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: screen.mobile_img,\n            className: \"mobile-screen-img slide-in-right \"\n          }, screen.mobile_img, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-description\",\n      children: screen.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScreenText, \"Wk8baY7uc+CWSrD2kMBp+I8qtIg=\");\n\n_c = ScreenText;\nexport default ScreenText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreenText\");","map":{"version":3,"sources":["C:/Users/siddharth-laptop/Desktop/authscate web 1/authscate_website/src/components/MobileScroll/ScreenText.js"],"names":["React","useRef","useEffect","useState","ScreenText","screen","setCurrentImg","i","ref","isVisible","setIsVisible","setItemVisible","e","isIntersecting","options","root","rootMargin","threshold","observer","IntersectionObserver","current","observe","unobserve","heading","mobile_img","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAEA,MAAMC,UAAU,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,aAAV;AAAyBC,IAAAA;AAAzB,GAAiC;AACnD,QAAMC,GAAG,GAAGP,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMQ,cAAc,GAAIC,CAAD,IAAO;AAAA;;AAC5B,eAAIA,CAAC,CAAC,CAAD,CAAL,gCAAI,IAAMC,cAAV,EAA0B;AACxBH,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAH,MAAAA,aAAa,CAACC,CAAD,CAAb;AACD;AACF,GALD;;AAOA,QAAMO,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE,IADQ;AAEdC,IAAAA,UAAU,EAAE,KAFE;AAGdC,IAAAA,SAAS,EAAE;AAHG,GAAhB;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBR,cAAzB,EAAyCG,OAAzC,CAAjB;;AACA,QAAIN,GAAG,CAACY,OAAR,EAAiB;AACfF,MAAAA,QAAQ,CAACG,OAAT,CAAiBb,GAAG,CAACY,OAArB;AACD;;AAED,WAAO,MAAM;AACX,UAAIZ,GAAG,CAACY,OAAR,EAAiB;AACfF,QAAAA,QAAQ,CAACI,SAAT,CAAmBd,GAAG,CAACY,OAAvB;AACD;AACF,KAJD;AAKD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAG,eAAcX,SAAS,GAAG,cAAH,GAAoB,EAAG,EAA/D;AAAkE,IAAA,GAAG,EAAED,GAAvE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCH,MAAM,CAACkB;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,2CAAf;AAAA,iCACE;AACE,YAAA,GAAG,EAAElB,MAAM,CAACmB,UADd;AAEE,YAAA,SAAS,EAAC;AAFZ,aAGOnB,MAAM,CAACmB,UAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBAAqCnB,MAAM,CAACoB;AAA5C;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/CD;;GAAMrB,U;;KAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst ScreenText = ({ screen, setCurrentImg, i }) => {\r\n  const ref = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const setItemVisible = (e) => {\r\n    if (e[0]?.isIntersecting) {\r\n      setIsVisible(!isVisible);\r\n      setCurrentImg(i);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: 0.6,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(setItemVisible, options);\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      if (ref.current) {\r\n        observer.unobserve(ref.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`screen-text ${isVisible ? \"text-visible\" : \"\"}`} ref={ref}>\r\n      <div className=\"screen-heading\">{screen.heading}</div>\r\n      <div className=\"mobile-mockup-wrapper only-mobile\">\r\n        <div className=\"mobile-mockup \">\r\n          <div className=\"mobile-mockup-screen flex absolute-center\">\r\n            <img\r\n              src={screen.mobile_img}\r\n              className=\"mobile-screen-img slide-in-right \"\r\n              key={screen.mobile_img}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"screen-description\">{screen.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScreenText;\r\n"]},"metadata":{},"sourceType":"module"}