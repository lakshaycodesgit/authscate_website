{"ast":null,"code":"// This file is autogenerated. It's used to publish ESM to npm.\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\nconst trimLeft = /^\\s+/;\nconst trimRight = /\\s+$/;\n\nfunction tinycolor(color, opts) {\n  color = color ? color : \"\";\n  opts = opts || {}; // If input is already a tinycolor, return itself\n\n  if (color instanceof tinycolor) {\n    return color;\n  } // If we are called as a function, call using new instead\n\n\n  if (!(this instanceof tinycolor)) {\n    return new tinycolor(color, opts);\n  }\n\n  var rgb = inputToRGB(color);\n  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n  this._gradientType = opts.gradientType; // Don't let the range of [0,255] come back in [0,1].\n  // Potentially lose a little bit of precision here, but will fix issues where\n  // .5 gets interpreted as half of the total, instead of half of 1\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n\n  if (this._r < 1) this._r = Math.round(this._r);\n  if (this._g < 1) this._g = Math.round(this._g);\n  if (this._b < 1) this._b = Math.round(this._b);\n  this._ok = rgb.ok;\n}\n\ntinycolor.prototype = {\n  isDark: function () {\n    return this.getBrightness() < 128;\n  },\n  isLight: function () {\n    return !this.isDark();\n  },\n  isValid: function () {\n    return this._ok;\n  },\n  getOriginalInput: function () {\n    return this._originalInput;\n  },\n  getFormat: function () {\n    return this._format;\n  },\n  getAlpha: function () {\n    return this._a;\n  },\n  getBrightness: function () {\n    //http://www.w3.org/TR/AERT#color-contrast\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  },\n  getLuminance: function () {\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    var rgb = this.toRgb();\n    var RsRGB, GsRGB, BsRGB, R, G, B;\n    RsRGB = rgb.r / 255;\n    GsRGB = rgb.g / 255;\n    BsRGB = rgb.b / 255;\n    if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  },\n  setAlpha: function (value) {\n    this._a = boundAlpha(value);\n    this._roundA = Math.round(100 * this._a) / 100;\n    return this;\n  },\n  toHsv: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    return {\n      h: hsv.h * 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: this._a\n    };\n  },\n  toHsvString: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    var h = Math.round(hsv.h * 360),\n        s = Math.round(hsv.s * 100),\n        v = Math.round(hsv.v * 100);\n    return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n  },\n  toHsl: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    return {\n      h: hsl.h * 360,\n      s: hsl.s,\n      l: hsl.l,\n      a: this._a\n    };\n  },\n  toHslString: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    var h = Math.round(hsl.h * 360),\n        s = Math.round(hsl.s * 100),\n        l = Math.round(hsl.l * 100);\n    return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n  },\n  toHex: function (allow3Char) {\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\n  },\n  toHexString: function (allow3Char) {\n    return \"#\" + this.toHex(allow3Char);\n  },\n  toHex8: function (allow4Char) {\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n  },\n  toHex8String: function (allow4Char) {\n    return \"#\" + this.toHex8(allow4Char);\n  },\n  toRgb: function () {\n    return {\n      r: Math.round(this._r),\n      g: Math.round(this._g),\n      b: Math.round(this._b),\n      a: this._a\n    };\n  },\n  toRgbString: function () {\n    return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n  },\n  toPercentageRgb: function () {\n    return {\n      r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n      g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n      b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n      a: this._a\n    };\n  },\n  toPercentageRgbString: function () {\n    return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n  },\n  toName: function () {\n    if (this._a === 0) {\n      return \"transparent\";\n    }\n\n    if (this._a < 1) {\n      return false;\n    }\n\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n  },\n  toFilter: function (secondColor) {\n    var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n    var secondHex8String = hex8String;\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n    if (secondColor) {\n      var s = tinycolor(secondColor);\n      secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n    }\n\n    return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n  },\n  toString: function (format) {\n    var formatSet = !!format;\n    format = format || this._format;\n    var formattedString = false;\n    var hasAlpha = this._a < 1 && this._a >= 0;\n    var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n    if (needsAlphaFormat) {\n      // Special case for \"transparent\", all other non-alpha formats\n      // will return rgba when there is transparency.\n      if (format === \"name\" && this._a === 0) {\n        return this.toName();\n      }\n\n      return this.toRgbString();\n    }\n\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n\n    return formattedString || this.toHexString();\n  },\n  clone: function () {\n    return tinycolor(this.toString());\n  },\n  _applyModification: function (fn, args) {\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this.setAlpha(color._a);\n    return this;\n  },\n  lighten: function () {\n    return this._applyModification(lighten, arguments);\n  },\n  brighten: function () {\n    return this._applyModification(brighten, arguments);\n  },\n  darken: function () {\n    return this._applyModification(darken, arguments);\n  },\n  desaturate: function () {\n    return this._applyModification(desaturate, arguments);\n  },\n  saturate: function () {\n    return this._applyModification(saturate, arguments);\n  },\n  greyscale: function () {\n    return this._applyModification(greyscale, arguments);\n  },\n  spin: function () {\n    return this._applyModification(spin, arguments);\n  },\n  _applyCombination: function (fn, args) {\n    return fn.apply(null, [this].concat([].slice.call(args)));\n  },\n  analogous: function () {\n    return this._applyCombination(analogous, arguments);\n  },\n  complement: function () {\n    return this._applyCombination(complement, arguments);\n  },\n  monochromatic: function () {\n    return this._applyCombination(monochromatic, arguments);\n  },\n  splitcomplement: function () {\n    return this._applyCombination(splitcomplement, arguments);\n  },\n  // Disabled until https://github.com/bgrins/TinyColor/issues/254\n  // polyad: function (number) {\n  //   return this._applyCombination(polyad, [number]);\n  // },\n  triad: function () {\n    return this._applyCombination(polyad, [3]);\n  },\n  tetrad: function () {\n    return this._applyCombination(polyad, [4]);\n  }\n}; // If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\n\ntinycolor.fromRatio = function (color, opts) {\n  if (typeof color == \"object\") {\n    var newColor = {};\n\n    for (var i in color) {\n      if (color.hasOwnProperty(i)) {\n        if (i === \"a\") {\n          newColor[i] = color[i];\n        } else {\n          newColor[i] = convertToPercentage(color[i]);\n        }\n      }\n    }\n\n    color = newColor;\n  }\n\n  return tinycolor(color, opts);\n}; // Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\n\n\nfunction inputToRGB(color) {\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l = null;\n  var ok = false;\n  var format = false;\n\n  if (typeof color == \"string\") {\n    color = stringInputToObject(color);\n  }\n\n  if (typeof color == \"object\") {\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n      s = convertToPercentage(color.s);\n      l = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l);\n      ok = true;\n      format = \"hsl\";\n    }\n\n    if (color.hasOwnProperty(\"a\")) {\n      a = color.a;\n    }\n  }\n\n  a = boundAlpha(a);\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a\n  };\n} // Conversion Functions\n// --------------------\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\n\n\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255\n  };\n} // `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\n\n\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n  var h,\n      s,\n      l = (max + min) / 2;\n\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        h = (b - r) / d + 2;\n        break;\n\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n} // `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n\n\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l = bound01(l, 100);\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n} // `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\n\n\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n  var h,\n      s,\n      v = max;\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        h = (b - r) / d + 2;\n        break;\n\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n} // `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n\n\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n  var i = Math.floor(h),\n      f = h - i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      mod = i % 6,\n      r = [v, q, p, p, t, v][mod],\n      g = [t, v, v, q, p, p][mod],\n      b = [p, p, t, v, v, q][mod];\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n} // `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\n\n\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))]; // Return a 3 character hex if possible\n\n  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n\n  return hex.join(\"\");\n} // `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\n\n\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))]; // Return a 4 character hex if possible\n\n  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n  }\n\n  return hex.join(\"\");\n} // `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\n\n\nfunction rgbaToArgbHex(r, g, b, a) {\n  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n  return hex.join(\"\");\n} // `equals`\n// Can be called with any tinycolor input\n\n\ntinycolor.equals = function (color1, color2) {\n  if (!color1 || !color2) return false;\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function () {\n  return tinycolor.fromRatio({\n    r: Math.random(),\n    g: Math.random(),\n    b: Math.random()\n  });\n}; // Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n\nfunction desaturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s -= amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s += amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n  return tinycolor(color).desaturate(100);\n}\n\nfunction lighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l += amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var rgb = tinycolor(color).toRgb();\n  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n  return tinycolor(rgb);\n}\n\nfunction darken(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l -= amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n} // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\n\n\nfunction spin(color, amount) {\n  var hsl = tinycolor(color).toHsl();\n  var hue = (hsl.h + amount) % 360;\n  hsl.h = hue < 0 ? 360 + hue : hue;\n  return tinycolor(hsl);\n} // Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n\nfunction complement(color) {\n  var hsl = tinycolor(color).toHsl();\n  hsl.h = (hsl.h + 180) % 360;\n  return tinycolor(hsl);\n}\n\nfunction polyad(color, number) {\n  if (isNaN(number) || number <= 0) {\n    throw new Error(\"Argument to polyad must be a positive number\");\n  }\n\n  var hsl = tinycolor(color).toHsl();\n  var result = [tinycolor(color)];\n  var step = 360 / number;\n\n  for (var i = 1; i < number; i++) {\n    result.push(tinycolor({\n      h: (hsl.h + i * step) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }));\n  }\n\n  return result;\n}\n\nfunction splitcomplement(color) {\n  var hsl = tinycolor(color).toHsl();\n  var h = hsl.h;\n  return [tinycolor(color), tinycolor({\n    h: (h + 72) % 360,\n    s: hsl.s,\n    l: hsl.l\n  }), tinycolor({\n    h: (h + 216) % 360,\n    s: hsl.s,\n    l: hsl.l\n  })];\n}\n\nfunction analogous(color, results, slices) {\n  results = results || 6;\n  slices = slices || 30;\n  var hsl = tinycolor(color).toHsl();\n  var part = 360 / slices;\n  var ret = [tinycolor(color)];\n\n  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n    hsl.h = (hsl.h + part) % 360;\n    ret.push(tinycolor(hsl));\n  }\n\n  return ret;\n}\n\nfunction monochromatic(color, results) {\n  results = results || 6;\n  var hsv = tinycolor(color).toHsv();\n  var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n  var ret = [];\n  var modification = 1 / results;\n\n  while (results--) {\n    ret.push(tinycolor({\n      h: h,\n      s: s,\n      v: v\n    }));\n    v = (v + modification) % 1;\n  }\n\n  return ret;\n} // Utility Functions\n// ---------------------\n\n\ntinycolor.mix = function (color1, color2, amount) {\n  amount = amount === 0 ? 0 : amount || 50;\n  var rgb1 = tinycolor(color1).toRgb();\n  var rgb2 = tinycolor(color2).toRgb();\n  var p = amount / 100;\n  var rgba = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n    a: (rgb2.a - rgb1.a) * p + rgb1.a\n  };\n  return tinycolor(rgba);\n}; // Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n\n\ntinycolor.readability = function (color1, color2) {\n  var c1 = tinycolor(color1);\n  var c2 = tinycolor(color2);\n  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n}; // `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n\n\ntinycolor.isReadable = function (color1, color2, wcag2) {\n  var readability = tinycolor.readability(color1, color2);\n  var wcag2Parms, out;\n  out = false;\n  wcag2Parms = validateWCAG2Parms(wcag2);\n\n  switch (wcag2Parms.level + wcag2Parms.size) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      out = readability >= 4.5;\n      break;\n\n    case \"AAlarge\":\n      out = readability >= 3;\n      break;\n\n    case \"AAAsmall\":\n      out = readability >= 7;\n      break;\n  }\n\n  return out;\n}; // `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n\n\ntinycolor.mostReadable = function (baseColor, colorList, args) {\n  var bestColor = null;\n  var bestScore = 0;\n  var readability;\n  var includeFallbackColors, level, size;\n  args = args || {};\n  includeFallbackColors = args.includeFallbackColors;\n  level = args.level;\n  size = args.size;\n\n  for (var i = 0; i < colorList.length; i++) {\n    readability = tinycolor.readability(baseColor, colorList[i]);\n\n    if (readability > bestScore) {\n      bestScore = readability;\n      bestColor = tinycolor(colorList[i]);\n    }\n  }\n\n  if (tinycolor.isReadable(baseColor, bestColor, {\n    level: level,\n    size: size\n  }) || !includeFallbackColors) {\n    return bestColor;\n  } else {\n    args.includeFallbackColors = false;\n    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n  }\n}; // Big List of Colors\n// ------------------\n// <https://www.w3.org/TR/css-color-4/#named-colors>\n\n\nvar names = tinycolor.names = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\"\n}; // Make it easy to access colors via `hexNames[hex]`\n\nvar hexNames = tinycolor.hexNames = flip(names); // Utilities\n// ---------\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n\nfunction flip(o) {\n  var flipped = {};\n\n  for (var i in o) {\n    if (o.hasOwnProperty(i)) {\n      flipped[o[i]] = i;\n    }\n  }\n\n  return flipped;\n} // Return a valid alpha value [0,1] with all invalid values being set to 1\n\n\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n\n  return a;\n} // Take input from [0, n] and return it as [0, 1]\n\n\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) n = \"100%\";\n  var processPercent = isPercentage(n);\n  n = Math.min(max, Math.max(0, parseFloat(n))); // Automatically convert percentage into number\n\n  if (processPercent) {\n    n = parseInt(n * max, 10) / 100;\n  } // Handle floating point rounding errors\n\n\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  } // Convert into [0, 1] range if it isn't already\n\n\n  return n % max / parseFloat(max);\n} // Force a number between 0 and 1\n\n\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n} // Parse a base-16 hex value into a base-10 integer\n\n\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n} // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n\n\nfunction isOnePointZero(n) {\n  return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n} // Check to see if string passed in is a percentage\n\n\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n} // Force a hex value to have 2 characters\n\n\nfunction pad2(c) {\n  return c.length == 1 ? \"0\" + c : \"\" + c;\n} // Replace a decimal with it's percentage value\n\n\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    n = n * 100 + \"%\";\n  }\n\n  return n;\n} // Converts a decimal to a hex value\n\n\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n} // Converts a hex value to a decimal\n\n\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\n\nvar matchers = function () {\n  // <http://www.w3.org/TR/css3-values/#integers>\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\"; // <http://www.w3.org/TR/css3-values/#number-value>\n\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\"; // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\"; // Actual matching.\n  // Parentheses and commas are optional, but not required.\n  // Whitespace can take the place of commas or opening paren\n\n  var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  return {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n  };\n}(); // `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\n\n\nfunction isValidCSSUnit(color) {\n  return !!matchers.CSS_UNIT.exec(color);\n} // `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n\n\nfunction stringInputToObject(color) {\n  color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  var named = false;\n\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color == \"transparent\") {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n      format: \"name\"\n    };\n  } // Try to match string input using regular expressions.\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n  // Just return an object and let the conversion functions handle that.\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\n\n\n  var match;\n\n  if (match = matchers.rgb.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3]\n    };\n  }\n\n  if (match = matchers.rgba.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3],\n      a: match[4]\n    };\n  }\n\n  if (match = matchers.hsl.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3]\n    };\n  }\n\n  if (match = matchers.hsla.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3],\n      a: match[4]\n    };\n  }\n\n  if (match = matchers.hsv.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3]\n    };\n  }\n\n  if (match = matchers.hsva.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3],\n      a: match[4]\n    };\n  }\n\n  if (match = matchers.hex8.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n\n  if (match = matchers.hex6.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n\n  if (match = matchers.hex4.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n\n  if (match = matchers.hex3.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n\n  return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n  // return valid WCAG2 parms for isReadable.\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n  var level, size;\n  parms = parms || {\n    level: \"AA\",\n    size: \"small\"\n  };\n  level = (parms.level || \"AA\").toUpperCase();\n  size = (parms.size || \"small\").toLowerCase();\n\n  if (level !== \"AA\" && level !== \"AAA\") {\n    level = \"AA\";\n  }\n\n  if (size !== \"small\" && size !== \"large\") {\n    size = \"small\";\n  }\n\n  return {\n    level: level,\n    size: size\n  };\n}\n\nexport { tinycolor as default };","map":{"version":3,"sources":["C:/Users/siddharth-laptop/Desktop/authscate web 1/authscate_website/node_modules/tinycolor2/esm/tinycolor.js"],"names":["trimLeft","trimRight","tinycolor","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","Math","round","_format","format","_gradientType","gradientType","_ok","ok","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","polyad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","min","max","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","random","amount","clamp01","hue","number","isNaN","Error","result","step","push","results","slices","part","ret","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase","default"],"mappings":"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","sourcesContent":["// This file is autogenerated. It's used to publish ESM to npm.\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nconst trimLeft = /^\\s+/;\nconst trimRight = /\\s+$/;\n\nfunction tinycolor(color, opts) {\n  color = color ? color : \"\";\n  opts = opts || {};\n\n  // If input is already a tinycolor, return itself\n  if (color instanceof tinycolor) {\n    return color;\n  }\n  // If we are called as a function, call using new instead\n  if (!(this instanceof tinycolor)) {\n    return new tinycolor(color, opts);\n  }\n\n  var rgb = inputToRGB(color);\n  (this._originalInput = color),\n    (this._r = rgb.r),\n    (this._g = rgb.g),\n    (this._b = rgb.b),\n    (this._a = rgb.a),\n    (this._roundA = Math.round(100 * this._a) / 100),\n    (this._format = opts.format || rgb.format);\n  this._gradientType = opts.gradientType;\n\n  // Don't let the range of [0,255] come back in [0,1].\n  // Potentially lose a little bit of precision here, but will fix issues where\n  // .5 gets interpreted as half of the total, instead of half of 1\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n  if (this._r < 1) this._r = Math.round(this._r);\n  if (this._g < 1) this._g = Math.round(this._g);\n  if (this._b < 1) this._b = Math.round(this._b);\n\n  this._ok = rgb.ok;\n}\n\ntinycolor.prototype = {\n  isDark: function () {\n    return this.getBrightness() < 128;\n  },\n  isLight: function () {\n    return !this.isDark();\n  },\n  isValid: function () {\n    return this._ok;\n  },\n  getOriginalInput: function () {\n    return this._originalInput;\n  },\n  getFormat: function () {\n    return this._format;\n  },\n  getAlpha: function () {\n    return this._a;\n  },\n  getBrightness: function () {\n    //http://www.w3.org/TR/AERT#color-contrast\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  },\n  getLuminance: function () {\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    var rgb = this.toRgb();\n    var RsRGB, GsRGB, BsRGB, R, G, B;\n    RsRGB = rgb.r / 255;\n    GsRGB = rgb.g / 255;\n    BsRGB = rgb.b / 255;\n\n    if (RsRGB <= 0.03928) R = RsRGB / 12.92;\n    else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    if (GsRGB <= 0.03928) G = GsRGB / 12.92;\n    else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    if (BsRGB <= 0.03928) B = BsRGB / 12.92;\n    else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  },\n  setAlpha: function (value) {\n    this._a = boundAlpha(value);\n    this._roundA = Math.round(100 * this._a) / 100;\n    return this;\n  },\n  toHsv: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n  },\n  toHsvString: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    var h = Math.round(hsv.h * 360),\n      s = Math.round(hsv.s * 100),\n      v = Math.round(hsv.v * 100);\n    return this._a == 1\n      ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\"\n      : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n  },\n  toHsl: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n  },\n  toHslString: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    var h = Math.round(hsl.h * 360),\n      s = Math.round(hsl.s * 100),\n      l = Math.round(hsl.l * 100);\n    return this._a == 1\n      ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\"\n      : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n  },\n  toHex: function (allow3Char) {\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\n  },\n  toHexString: function (allow3Char) {\n    return \"#\" + this.toHex(allow3Char);\n  },\n  toHex8: function (allow4Char) {\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n  },\n  toHex8String: function (allow4Char) {\n    return \"#\" + this.toHex8(allow4Char);\n  },\n  toRgb: function () {\n    return {\n      r: Math.round(this._r),\n      g: Math.round(this._g),\n      b: Math.round(this._b),\n      a: this._a,\n    };\n  },\n  toRgbString: function () {\n    return this._a == 1\n      ? \"rgb(\" +\n          Math.round(this._r) +\n          \", \" +\n          Math.round(this._g) +\n          \", \" +\n          Math.round(this._b) +\n          \")\"\n      : \"rgba(\" +\n          Math.round(this._r) +\n          \", \" +\n          Math.round(this._g) +\n          \", \" +\n          Math.round(this._b) +\n          \", \" +\n          this._roundA +\n          \")\";\n  },\n  toPercentageRgb: function () {\n    return {\n      r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n      g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n      b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n      a: this._a,\n    };\n  },\n  toPercentageRgbString: function () {\n    return this._a == 1\n      ? \"rgb(\" +\n          Math.round(bound01(this._r, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._g, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._b, 255) * 100) +\n          \"%)\"\n      : \"rgba(\" +\n          Math.round(bound01(this._r, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._g, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._b, 255) * 100) +\n          \"%, \" +\n          this._roundA +\n          \")\";\n  },\n  toName: function () {\n    if (this._a === 0) {\n      return \"transparent\";\n    }\n\n    if (this._a < 1) {\n      return false;\n    }\n\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n  },\n  toFilter: function (secondColor) {\n    var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n    var secondHex8String = hex8String;\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n    if (secondColor) {\n      var s = tinycolor(secondColor);\n      secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n    }\n\n    return (\n      \"progid:DXImageTransform.Microsoft.gradient(\" +\n      gradientType +\n      \"startColorstr=\" +\n      hex8String +\n      \",endColorstr=\" +\n      secondHex8String +\n      \")\"\n    );\n  },\n  toString: function (format) {\n    var formatSet = !!format;\n    format = format || this._format;\n\n    var formattedString = false;\n    var hasAlpha = this._a < 1 && this._a >= 0;\n    var needsAlphaFormat =\n      !formatSet &&\n      hasAlpha &&\n      (format === \"hex\" ||\n        format === \"hex6\" ||\n        format === \"hex3\" ||\n        format === \"hex4\" ||\n        format === \"hex8\" ||\n        format === \"name\");\n\n    if (needsAlphaFormat) {\n      // Special case for \"transparent\", all other non-alpha formats\n      // will return rgba when there is transparency.\n      if (format === \"name\" && this._a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n\n    return formattedString || this.toHexString();\n  },\n  clone: function () {\n    return tinycolor(this.toString());\n  },\n\n  _applyModification: function (fn, args) {\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this.setAlpha(color._a);\n    return this;\n  },\n  lighten: function () {\n    return this._applyModification(lighten, arguments);\n  },\n  brighten: function () {\n    return this._applyModification(brighten, arguments);\n  },\n  darken: function () {\n    return this._applyModification(darken, arguments);\n  },\n  desaturate: function () {\n    return this._applyModification(desaturate, arguments);\n  },\n  saturate: function () {\n    return this._applyModification(saturate, arguments);\n  },\n  greyscale: function () {\n    return this._applyModification(greyscale, arguments);\n  },\n  spin: function () {\n    return this._applyModification(spin, arguments);\n  },\n\n  _applyCombination: function (fn, args) {\n    return fn.apply(null, [this].concat([].slice.call(args)));\n  },\n  analogous: function () {\n    return this._applyCombination(analogous, arguments);\n  },\n  complement: function () {\n    return this._applyCombination(complement, arguments);\n  },\n  monochromatic: function () {\n    return this._applyCombination(monochromatic, arguments);\n  },\n  splitcomplement: function () {\n    return this._applyCombination(splitcomplement, arguments);\n  },\n  // Disabled until https://github.com/bgrins/TinyColor/issues/254\n  // polyad: function (number) {\n  //   return this._applyCombination(polyad, [number]);\n  // },\n  triad: function () {\n    return this._applyCombination(polyad, [3]);\n  },\n  tetrad: function () {\n    return this._applyCombination(polyad, [4]);\n  },\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function (color, opts) {\n  if (typeof color == \"object\") {\n    var newColor = {};\n    for (var i in color) {\n      if (color.hasOwnProperty(i)) {\n        if (i === \"a\") {\n          newColor[i] = color[i];\n        } else {\n          newColor[i] = convertToPercentage(color[i]);\n        }\n      }\n    }\n    color = newColor;\n  }\n\n  return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n  var rgb = { r: 0, g: 0, b: 0 };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l = null;\n  var ok = false;\n  var format = false;\n\n  if (typeof color == \"string\") {\n    color = stringInputToObject(color);\n  }\n\n  if (typeof color == \"object\") {\n    if (\n      isValidCSSUnit(color.r) &&\n      isValidCSSUnit(color.g) &&\n      isValidCSSUnit(color.b)\n    ) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (\n      isValidCSSUnit(color.h) &&\n      isValidCSSUnit(color.s) &&\n      isValidCSSUnit(color.v)\n    ) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (\n      isValidCSSUnit(color.h) &&\n      isValidCSSUnit(color.s) &&\n      isValidCSSUnit(color.l)\n    ) {\n      s = convertToPercentage(color.s);\n      l = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l);\n      ok = true;\n      format = \"hsl\";\n    }\n\n    if (color.hasOwnProperty(\"a\")) {\n      a = color.a;\n    }\n  }\n\n  a = boundAlpha(a);\n\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a,\n  };\n}\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255,\n  };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    l = (max + min) / 2;\n\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l = bound01(l, 100);\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    v = max;\n\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n\n  var i = Math.floor(h),\n    f = h - i,\n    p = v * (1 - s),\n    q = v * (1 - f * s),\n    t = v * (1 - (1 - f) * s),\n    mod = i % 6,\n    r = [v, q, p, p, t, v][mod],\n    g = [t, v, v, q, p, p][mod],\n    b = [p, p, t, v, v, q][mod];\n\n  return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [\n    pad2(Math.round(r).toString(16)),\n    pad2(Math.round(g).toString(16)),\n    pad2(Math.round(b).toString(16)),\n  ];\n\n  // Return a 3 character hex if possible\n  if (\n    allow3Char &&\n    hex[0].charAt(0) == hex[0].charAt(1) &&\n    hex[1].charAt(0) == hex[1].charAt(1) &&\n    hex[2].charAt(0) == hex[2].charAt(1)\n  ) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n\n  return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [\n    pad2(Math.round(r).toString(16)),\n    pad2(Math.round(g).toString(16)),\n    pad2(Math.round(b).toString(16)),\n    pad2(convertDecimalToHex(a)),\n  ];\n\n  // Return a 4 character hex if possible\n  if (\n    allow4Char &&\n    hex[0].charAt(0) == hex[0].charAt(1) &&\n    hex[1].charAt(0) == hex[1].charAt(1) &&\n    hex[2].charAt(0) == hex[2].charAt(1) &&\n    hex[3].charAt(0) == hex[3].charAt(1)\n  ) {\n    return (\n      hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0)\n    );\n  }\n\n  return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n  var hex = [\n    pad2(convertDecimalToHex(a)),\n    pad2(Math.round(r).toString(16)),\n    pad2(Math.round(g).toString(16)),\n    pad2(Math.round(b).toString(16)),\n  ];\n\n  return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n  if (!color1 || !color2) return false;\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function () {\n  return tinycolor.fromRatio({\n    r: Math.random(),\n    g: Math.random(),\n    b: Math.random(),\n  });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s -= amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s += amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n  return tinycolor(color).desaturate(100);\n}\n\nfunction lighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l += amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var rgb = tinycolor(color).toRgb();\n  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n  return tinycolor(rgb);\n}\n\nfunction darken(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l -= amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n  var hsl = tinycolor(color).toHsl();\n  var hue = (hsl.h + amount) % 360;\n  hsl.h = hue < 0 ? 360 + hue : hue;\n  return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n  var hsl = tinycolor(color).toHsl();\n  hsl.h = (hsl.h + 180) % 360;\n  return tinycolor(hsl);\n}\n\nfunction polyad(color, number) {\n  if (isNaN(number) || number <= 0) {\n    throw new Error(\"Argument to polyad must be a positive number\");\n  }\n  var hsl = tinycolor(color).toHsl();\n  var result = [tinycolor(color)];\n  var step = 360 / number;\n  for (var i = 1; i < number; i++) {\n    result.push(tinycolor({ h: (hsl.h + i * step) % 360, s: hsl.s, l: hsl.l }));\n  }\n\n  return result;\n}\n\nfunction splitcomplement(color) {\n  var hsl = tinycolor(color).toHsl();\n  var h = hsl.h;\n  return [\n    tinycolor(color),\n    tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n    tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n  ];\n}\n\nfunction analogous(color, results, slices) {\n  results = results || 6;\n  slices = slices || 30;\n\n  var hsl = tinycolor(color).toHsl();\n  var part = 360 / slices;\n  var ret = [tinycolor(color)];\n\n  for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results; ) {\n    hsl.h = (hsl.h + part) % 360;\n    ret.push(tinycolor(hsl));\n  }\n  return ret;\n}\n\nfunction monochromatic(color, results) {\n  results = results || 6;\n  var hsv = tinycolor(color).toHsv();\n  var h = hsv.h,\n    s = hsv.s,\n    v = hsv.v;\n  var ret = [];\n  var modification = 1 / results;\n\n  while (results--) {\n    ret.push(tinycolor({ h: h, s: s, v: v }));\n    v = (v + modification) % 1;\n  }\n\n  return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function (color1, color2, amount) {\n  amount = amount === 0 ? 0 : amount || 50;\n\n  var rgb1 = tinycolor(color1).toRgb();\n  var rgb2 = tinycolor(color2).toRgb();\n\n  var p = amount / 100;\n\n  var rgba = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n    a: (rgb2.a - rgb1.a) * p + rgb1.a,\n  };\n\n  return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function (color1, color2) {\n  var c1 = tinycolor(color1);\n  var c2 = tinycolor(color2);\n  return (\n    (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /\n    (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05)\n  );\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function (color1, color2, wcag2) {\n  var readability = tinycolor.readability(color1, color2);\n  var wcag2Parms, out;\n\n  out = false;\n\n  wcag2Parms = validateWCAG2Parms(wcag2);\n  switch (wcag2Parms.level + wcag2Parms.size) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      out = readability >= 4.5;\n      break;\n    case \"AAlarge\":\n      out = readability >= 3;\n      break;\n    case \"AAAsmall\":\n      out = readability >= 7;\n      break;\n  }\n  return out;\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function (baseColor, colorList, args) {\n  var bestColor = null;\n  var bestScore = 0;\n  var readability;\n  var includeFallbackColors, level, size;\n  args = args || {};\n  includeFallbackColors = args.includeFallbackColors;\n  level = args.level;\n  size = args.size;\n\n  for (var i = 0; i < colorList.length; i++) {\n    readability = tinycolor.readability(baseColor, colorList[i]);\n    if (readability > bestScore) {\n      bestScore = readability;\n      bestColor = tinycolor(colorList[i]);\n    }\n  }\n\n  if (\n    tinycolor.isReadable(baseColor, bestColor, {\n      level: level,\n      size: size,\n    }) ||\n    !includeFallbackColors\n  ) {\n    return bestColor;\n  } else {\n    args.includeFallbackColors = false;\n    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n  }\n};\n\n// Big List of Colors\n// ------------------\n// <https://www.w3.org/TR/css-color-4/#named-colors>\nvar names = (tinycolor.names = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\",\n});\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = (tinycolor.hexNames = flip(names));\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n  var flipped = {};\n  for (var i in o) {\n    if (o.hasOwnProperty(i)) {\n      flipped[o[i]] = i;\n    }\n  }\n  return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n\n  return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) n = \"100%\";\n\n  var processPercent = isPercentage(n);\n  n = Math.min(max, Math.max(0, parseFloat(n)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    n = parseInt(n * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n  return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n  return c.length == 1 ? \"0\" + c : \"\" + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    n = n * 100 + \"%\";\n  }\n\n  return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\n\nvar matchers = (function () {\n  // <http://www.w3.org/TR/css3-values/#integers>\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n  // <http://www.w3.org/TR/css3-values/#number-value>\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n  // Actual matching.\n  // Parentheses and commas are optional, but not required.\n  // Whitespace can take the place of commas or opening paren\n  var PERMISSIVE_MATCH3 =\n    \"[\\\\s|\\\\(]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")\\\\s*\\\\)?\";\n  var PERMISSIVE_MATCH4 =\n    \"[\\\\s|\\\\(]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")\\\\s*\\\\)?\";\n\n  return {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n  };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n  return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n  color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color == \"transparent\") {\n    return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n  }\n\n  // Try to match string input using regular expressions.\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n  // Just return an object and let the conversion functions handle that.\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\n  var match;\n  if ((match = matchers.rgb.exec(color))) {\n    return { r: match[1], g: match[2], b: match[3] };\n  }\n  if ((match = matchers.rgba.exec(color))) {\n    return { r: match[1], g: match[2], b: match[3], a: match[4] };\n  }\n  if ((match = matchers.hsl.exec(color))) {\n    return { h: match[1], s: match[2], l: match[3] };\n  }\n  if ((match = matchers.hsla.exec(color))) {\n    return { h: match[1], s: match[2], l: match[3], a: match[4] };\n  }\n  if ((match = matchers.hsv.exec(color))) {\n    return { h: match[1], s: match[2], v: match[3] };\n  }\n  if ((match = matchers.hsva.exec(color))) {\n    return { h: match[1], s: match[2], v: match[3], a: match[4] };\n  }\n  if ((match = matchers.hex8.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\",\n    };\n  }\n  if ((match = matchers.hex6.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\",\n    };\n  }\n  if ((match = matchers.hex4.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? \"name\" : \"hex8\",\n    };\n  }\n  if ((match = matchers.hex3.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      format: named ? \"name\" : \"hex\",\n    };\n  }\n\n  return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n  // return valid WCAG2 parms for isReadable.\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n  var level, size;\n  parms = parms || { level: \"AA\", size: \"small\" };\n  level = (parms.level || \"AA\").toUpperCase();\n  size = (parms.size || \"small\").toLowerCase();\n  if (level !== \"AA\" && level !== \"AAA\") {\n    level = \"AA\";\n  }\n  if (size !== \"small\" && size !== \"large\") {\n    size = \"small\";\n  }\n  return { level: level, size: size };\n}\n\nexport { tinycolor as default };\n"]},"metadata":{},"sourceType":"module"}